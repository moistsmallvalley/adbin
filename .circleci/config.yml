# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  ci: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - server_ci
      - frontend_ci

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  server_ci:
    working_directory: ~/ci/server
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/go:1.19.2
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: example
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Build
          command: go build ./...
      - run:
          name: Install golangci-lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.52.1
      - run:
          name: Lint
          command: golangci-lint run -v
      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`; do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports

  frontend_ci:
    working_directory: ~/ci/frontend
    docker:
      - image: cimg/node:18.3.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - package-lock-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: cd frontend && npm ci
      - save_cache:
          key: package-lock-{{ checksum "frontend/package-lock.json" }}
          paths:
            - "frontend/node_modules"
            - "~/.npm"
      - run:
          name: Build
          command: cd frontend && npm run build
      - run:
          name: Lint
          command: cd frontend && npm run lint
      # - run:
      #     name: Run tests
      #     command: cd frontend && npm run test


